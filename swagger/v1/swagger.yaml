swagger: '2.0'
info:
  title: Safari API 
  version: '1.0'
paths:
  /safaris:
    get:
      summary: Get all safaris
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Safari'
    post:
      summary: Create a new safari
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: safari
          description: Safari object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/SafariInput'
      responses:
        201:
          description: Successful operation
          schema:
            $ref: '#/definitions/Safari'
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

  /safaris/{id}:
    get:
      summary: Get a specific safari by ID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the safari to be fetched
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Safari'
        404:
          description: Safari not found

    put:
      summary: Update a specific safari by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the safari to be updated
          required: true
          type: integer
          format: int64
        - in: body
          name: safari
          description: Safari object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/SafariInput'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Safari'
        404:
          description: Safari not found
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Delete a specific safari by ID
      parameters:
        - name: id
          in: path
          description: ID of the safari to be deleted
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: No content
        404:
          description: Safari not found

  /reservations:
    get:
      summary: Get all reservations
      security:
        - BearerAuth: []
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Reservation'
    post:
      summary: Create a new reservation
      security:
        - BearerAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: reservation
          description: Reservation object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/ReservationInput'
      responses:
        201:
          description: Successful operation
          schema:
            $ref: '#/definitions/Reservation'
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

  /reservations/{id}:
    get:
      summary: Get a specific reservation by ID
      security:
        - BearerAuth: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the reservation to be fetched
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Reservation'
        404:
          description: Reservation not found
        403:
          description: Forbidden - User does not have permission

    put:
      summary: Update a specific reservation by ID
      security:
        - BearerAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the reservation to be updated
          required: true
          type: integer
          format: int64
        - in: body
          name: reservation
          description: Reservation object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/ReservationInput'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Reservation'
        404:
          description: Reservation not found
        403:
          description: Forbidden - User does not have permission
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Delete a specific reservation by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the reservation to be deleted
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: No content
        404:
          description: Reservation not found
        403:
          description: Forbidden - User does not have permission

  

  /homes:
    get:
      summary: Get home information
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/HomeResponse'
  


  /users/registrations:
    post:
      summary: User Registration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User object for registration
          required: true
          schema:
            $ref: '#/definitions/UserRegistrationInput'
      responses:
        200:
          description: Signed up successfully
          schema:
            $ref: '#/definitions/User'
        422:
          description: User cannot be created. Validation error message
          schema:
            $ref: '#/definitions/Error'
  
    delete:
      summary: Delete User Account
      security:
        - BearerAuth: []
      produces:
        - application/json
      responses:
        200:
          description: Account deleted successfully
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'

  /users/sessions:
    post:
      summary: User Login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User credentials for login
          required: true
          schema:
            $ref: '#/definitions/UserLoginInput'
      responses:
        200:
          description: Logged in successfully
          schema:
            $

definitions:
  Safari:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      location:
        type: string
      description:
        type: string
      price:
        type: number
        format: float
      img:
        type: string

  SafariInput:
    type: object
    properties:
      name:
        type: string
      location:
        type: string
      description:
        type: string
      price:
        type: number
        format: float
      img:
        type: string

  Reservation:
    type: object
    properties:
      id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
      safari_id:
        type: integer
        format: int64
      bookingDate:
        type: string
        format: date
      numberofPersons:
        type: integer
      totalAmount:
        type: number
        format: float
  


  UserRegistrationInput:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
    required:
      - username
      - email
      - password

  User:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      email:
        type: string
        format: email
    required:
      - id
      - username
      - email

  UserLoginInput:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
    required:
      - email
      - password

      
  ReservationInput:
    type: object
    properties:
      user_id:
        type: integer
        format: int64
      safari_id:
        type: integer
        format: int64
      bookingDate:
        type: string
        format: date
      numberofPersons:
        type: integer
      totalAmount:
        type: number



  
  

  
